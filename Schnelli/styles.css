body {
  font-family: Arial, Helvetica, sans-serif;
}

.text1 {
  font-family: Arial, Helvetica, sans-serif;
}

p {
  font-family: Arial, Helvetica, sans-serif;
}

label {
  font-family: Arial, Helvetica, sans-serif;
}

h1 {
  font-family: Arial, Helvetica, sans-serif;
}

h2 {
  font-family: Arial, Helvetica, sans-serif;
}

textarea {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 14px;
  border: solid lightgray 1px;
  border-radius: 20px;
}

table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  font-size: 14px;
}

td, th {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 4px;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 600;
}

tr:nth-child(even) {
  background-color: #dddddd;
}

tr:nth-child(odd) {
  background-color: white;
  /* background-color: transparent; */
}

/* Tooltip container */

.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black;
  /* If you want dots under the hoverable text */
}

/* Tooltip text */

.tooltip .tooltiptext {
  visibility: hidden;
  width: 300px;
  background-color: #555;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;
  /* Position the tooltip text */
  position: absolute;
  z-index: 1;
  bottom: 125%;
  left: 50%;
  margin-left: -150px;
  /* Fade in tooltip */
  opacity: 0;
  transition: opacity 0.3s;
}

/* Tooltip arrow */

.tooltip .tooltiptext::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent;
}

/* Show the tooltip text when you mouse over the tooltip container */

.tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
  z-index: 5;
}

.clickable {
  font-family: Arial, Helvetica, sans-serif;
  cursor: pointer;
}

/* RADIO BUTTON */

/* Customize the label (the container) */

.radiobutton_container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */

.radiobutton_container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom radio button */

.radiomark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */

.radiobutton_container:hover input~.radiomark {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */

.radiobutton_container input:checked~.radiomark {
  background-color: #70A2FF;
}

/* Create the indicator (the dot/circle - hidden when not checked) */

.radiomark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */

.radiobutton_container input:checked~.radiomark:after {
  display: block;
}

/* Style the indicator (dot/circle) */

.radiobutton_container .radiomark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}

/* Customize the label (the container) */

.checkBox_container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 0px;
  cursor: pointer;
  font-size: 20px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */

.checkBox_container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */

.checkBox_container:hover input~.checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */

.checkBox_container input:checked~.checkmark {
  background-color: #70A2FF;
}

/* Create the checkmark/indicator (hidden when not checked) */

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */

.checkBox_container input:checked~.checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */

.checkBox_container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

button {
  background-color: rgb(11, 116, 221);
  border: none;
  color: white;
  padding: 4px 8px;
  text-align: center;
  font-size: 16px;
  /* margin: 4px 2px; */
  opacity: 0.8;
  transition: 0.3s;
  cursor: pointer;
  border-radius: 8px;
}

button:hover {
  opacity: 1
}

.button_disabled {
  opacity: 0.5;
}

.button_disabled:hover {
  opacity: 0.5;
  cursor: default;
}

.border_center {
  border-bottom: solid;
  border-width: 2px;
  border-color: black;
  margin-bottom: 10px;
}

.tabButton {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 14px;
  cursor: pointer;
  flex-grow: 1;
  text-align: center;
  height: 25px;
  padding-top: 2px;
  /* border: solid 6px;
    border-color: #70A2FF; */
  background-color: #70A2FF;
  color: white;
  border: solid 6px;
  border-color: lightblue;
  border-radius: 20px;
}

@media print {
  .checkBox_container input {
    position: absolute;
    opacity: 1;
    height: 0px;
    width: 0px;
  }
  @page {
    size: portrait;
    margin: 1cm;
  }
  body {
    margin: 0cm;
    background-image: none;
  }
  input[type=text] {
    border: 0px;
    background-color: transparent;
  }
  textarea {
    border: 0px;
    background-color: transparent;
  }
  .no-print, .no-print * {
    display: none !important;
  }
  .no-print-hide, .no-print-hide * {
    visibility: hidden !important;
  }
  [class*="invoice_"] {
    display: block;
  }
  #snackbar {
    display: none !important;
  }
}

[class*="invoice_"] {
  position: absolute;
  width: 100px;
  height: 20px;
  font-size: 12px;
}

.invoice_border {
  border: solid 3px;
  border-radius: 10px;
  border-color: #5B6275;
}

.in_td {
  height: 30px;
}

/* The snackbar - position it at the bottom and in the middle of the screen */

#snackbar {
  visibility: hidden;
  /* Hidden by default. Visible on click */
  /* min-width: 500px; */
  /* margin-left: -250px; */
  background-color: #333;
  /* Black background color */
  color: #fff;
  /* White text color */
  text-align: center;
  /* Centered text */
  border-radius: 2px;
  /* Rounded borders */
  padding: 16px;
  /* Padding */
  position: fixed;
  /* Sit on top of the screen */
  z-index: 1;
  /* Add a z-index if needed */
  /* left: 50%; */
  bottom: 30px;
  /* 30px from the bottom */
  font-size: 24px;
}

/* Show the snackbar when clicking on a button (class added with JavaScript) */

#snackbar.show {
  visibility: visible;
  /* Show the snackbar */
  /* Add animation: Take 0.5 seconds to fade in and out the snackbar.
    However, delay the fade out process for 2.5 seconds */
  animation: fadein 0.5s;
  animation-fill-mode: both;
}

#snackbar.hide {
  visibility: visible;
  animation: fadeout 0.5s;
  animation-fill-mode: both;
}

#snackbar.refresh1 {
  visibility: visible;
  animation: refresh1 0.5s;
  animation-fill-mode: both;
}

#snackbar.refresh2 {
  visibility: visible;
  animation: refresh2 0.5s;
  animation-fill-mode: both;
}

/* Animations to fade the snackbar in and out */

@keyframes fadein {
  from {
    bottom: 0;
    opacity: 0;
    background-color: blue;
  }
  to {
    bottom: 30px;
    opacity: 1;
    background-color: #333;
  }
}

@keyframes fadeout {
  from {
    bottom: 30px;
    opacity: 1;
  }
  to {
    bottom: 0;
    opacity: 0;
  }
}

@keyframes refresh1 {
  from {
    background-color: blue;
  }
  to {
    background-color: #333;
  }
}

@keyframes refresh2 {
  from {
    background-color: blue;
  }
  to {
    background-color: #333;
  }
}

/* .recordview {
  font-size: 20px;
} */

.loader {
  border: 16px solid white;
  border-top: 16px solid rgb(11, 116, 221);
  ;
  border-radius: 50%;
  width: 120px;
  height: 120px;
  animation: loader_spin 2s linear infinite;
}

@keyframes loader_spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.largeText {
  font-size: 18pt;
}

input[type=text] {
  border: solid lightgray 1px;
  border-radius: 20px;
}

input[type=password] {
  border: solid lightgray 1px;
  border-radius: 20px;
}

.icon_black_to_blue2:hover {
  filter: sepia(100%) saturate(1400%) brightness(500%) hue-rotate(180deg);
  cursor: pointer;
}

.no_selection {
  user-select: none;
  /* standard syntax */
  -webkit-user-select: none;
  /* webkit (safari, chrome) browsers */
  -moz-user-select: none;
  /* mozilla browsers */
  -khtml-user-select: none;
  /* webkit (konqueror) browsers */
  -ms-user-select: none;
  /* IE10+ */
}